{
	"name": "PL_Incremental_Load_Multiple_SRC_Tables",
	"properties": {
		"activities": [
			{
				"name": "IterateSQLTables",
				"type": "ForEach",
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.TableList",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "LookupOldWaterMarkActivity",
							"type": "Lookup",
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"source": {
									"type": "SqlSource",
									"sqlReaderQuery": {
										"value": "select * from watermarktable where TableName='@{item().Table_Name}'",
										"type": "Expression"
									}
								},
								"dataset": {
									"referenceName": "DS_Incremental_Load_WatermarkTable",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "LookupNewWatermarkActivity",
							"type": "Lookup",
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"source": {
									"type": "SqlSource",
									"sqlReaderQuery": {
										"value": "select MAX(@{item().WaterMark_Column}) as NewWatermarkvalue from @{item().TABLE_NAME}",
										"type": "Expression"
									}
								},
								"dataset": {
									"referenceName": "DS_Incremental_Load_SRC",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "IncrementalCopyActivity",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "LookupNewWatermarkActivity",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "LookupOldWaterMarkActivity",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"source": {
									"type": "SqlSource",
									"sqlReaderQuery": {
										"value": "select * from @{item().TABLE_NAME} where @{item().WaterMark_Column} >'@{activity('LookupOldWaterMarkActivity').output.firstrow.WatermarkValue}' and @{item().WaterMark_Column} <='@{activity('LookupNewWatermarkActivity').output.firstrow.NewWatermarkValue}'",
										"type": "Expression"
									}
								},
								"sink": {
									"type": "SqlSink",
									"writeBatchSize": 10000,
									"sqlWriterStoredProcedureName": {
										"value": "@{item().StoredProcedureNameForMergeOperation}",
										"type": "Expression"
									},
									"sqlWriterTableType": {
										"value": "@{item().TableType}",
										"type": "Expression"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_Incremental_Load_SRC",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_Incremental_Load_TGT",
									"type": "DatasetReference",
									"parameters": {
										"SinkTableName": "@{item().TABLE_NAME}"
									}
								}
							]
						},
						{
							"name": "StoredProceduretoWriteWatermarkActivity",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "IncrementalCopyActivity",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_write_watermark]",
								"storedProcedureParameters": {
									"LastModifiedtime": {
										"value": {
											"value": "@{activity('LookupNewWatermarkActivity').output.firstRow.NewWatermarkvalue}\n\n",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"TableName": {
										"value": {
											"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL_DB_TGT",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "WebActivity1",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "IncrementalCopyActivity",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"url": "https://prod-16.eastus2.logic.azure.com:443/workflows/aec59aa028b44cfbb72f41c6c3c303e8/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=pHbTaTeRaosaOXhi_5W8k03jZ-x84lOI8pMHu7FX4JA",
								"method": "POST",
								"headers": {
									"dataFactoryName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"pipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"message": {
										"value": "@activity('IncrementalCopyActivity').output.errors",
										"type": "Expression"
									}
								},
								"body": "dataFactoryName = @pipeline().DataFactory\npipelineName=@pipeline().Pipeline\nmessage=@activity('IncrementalCopyActivity').output.errors"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"TableList": {
				"type": "Object",
				"defaultValue": [
					{
						"TABLE_NAME": "customer_table",
						"WaterMark_Column": "LastModifytime",
						"TableType": "DataTypeforCustomerTable",
						"StoredProcedureNameForMergeOperation": "usp_upsert_customer_table"
					},
					{
						"TABLE_NAME": "project_table",
						"WaterMark_Column": "Creationtime",
						"TableType": "DataTypeforProjectTable",
						"StoredProcedureNameForMergeOperation": "usp_upsert_project_table"
					}
				]
			}
		}
	}
}